{"ast":null,"code":"function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // Older browsers don't support event options, feature detect it.\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\n\nvar hasPassiveEvents = false;\n\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0; // returns true if `el` should be allowed to receive touchmove events.\n\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event; // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n\n  if (allowTouchMove(e.target)) {\n    return true;\n  } // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n\n\n  if (e.touches.length > 1) return true;\n  if (e.preventDefault) e.preventDefault();\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = scrollBarGap + 'px';\n    }\n  } // If previousBodyOverflowSetting is already set, don't set it again.\n\n\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight; // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting; // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n\n    previousBodyOverflowSetting = undefined;\n  }\n}; // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\n\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  } // disableBodyScroll must not have been called on this targetElement before\n\n\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    } // Reset initial clientY.\n\n\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};","map":{"version":3,"sources":["C:/Users/ewt-all-in-one-1/Desktop/Chat-app/node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","hasPassiveEvents","window","passiveTestOptions","passive","undefined","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","event","target","touches","setOverflowHidden","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","document","documentElement","clientWidth","body","style","paddingRight","overflow","restoreOverflowSetting","isTargetElementTotallyScrolled","targetElement","scrollHeight","scrollTop","clientHeight","handleScroll","clientY","targetTouches","stopPropagation","disableBodyScroll","console","error","concat","ontouchstart","ontouchmove","clearAllBodyScrollLocks","forEach","enableBodyScroll","filter"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}