{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ewt-all-in-one-1\\\\Desktop\\\\Chat-app\\\\src\\\\pages\\\\ClickModel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, doc, getDoc, onSnapshot, orderBy, query, Timestamp } from \"firebase/firestore\";\nimport Moment from \"react-moment\";\nimport Img from \"../image1.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClickModel = () => {\n  _s();\n\n  const scrool = useRef();\n  const [open, setOpen] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [user, setUser] = useState();\n\n  const onOpenModal = () => setOpen(true);\n\n  const onCloseModal = () => setOpen(false);\n\n  const userDetailsChat = JSON.parse(localStorage.getItem(\"os-user\"));\n  const user1 = auth.currentUser.uid; // const users = auth.onAuthStateChanged((user) => {\n  //   console.log(user.uid);\n  // });\n\n  const clientId = JSON.parse(localStorage.getItem(\"id\"));\n  useEffect(() => {\n    getDoc(doc(db, \"users\", auth.currentUser.uid)).then(docSnap => {\n      if (docSnap.exists) {\n        setUser(docSnap.data());\n      }\n    });\n  }, []);\n  useEffect(() => {\n    var _scrool$current;\n\n    (_scrool$current = scrool.current) === null || _scrool$current === void 0 ? void 0 : _scrool$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [text]);\n  useEffect(() => {\n    const user2 = clientId.id;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    const msgsRef = collection(db, \"messages\", id, \"chat\");\n    const q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\n    onSnapshot(q, querySnapshot => {\n      let msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push(doc.data());\n      });\n      setChat(msgs);\n    });\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user2 = clientId.id;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    await addDoc(collection(db, \"messages\", id, \"chat\"), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date()),\n      // senderName: userDetailsChat.name,\n      senderGmail: userDetailsChat.email,\n      recevierName: clientId.name,\n      recevierGmail: clientId.email\n    });\n    setText(\"\");\n  };\n\n  console.log(chat);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [open === true ? /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: onCloseModal,\n      classNames: {\n        modal: \"message-pop-model\"\n      },\n      center: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-model-size\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-model-size-img\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Img,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-model-size-status\",\n            children: [msg.media ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.media,\n              alt: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 30\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user && user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Moment, {\n                fromNow: true,\n                children: user && user.createdAt.toDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-model-size-height\",\n          children: chat && chat.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: user1 ? \"chat-model-size-client-model\" : \"chat-model-size-help-model\",\n            style: {\n              position: \"relative\"\n            },\n            ref: scrool,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Moment, {\n                fromNow: true,\n                children: data.createdAt.toDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-model-size-position\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-model-size-input d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-model-size-input-i\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Say something\",\n                  value: text,\n                  onInput: e => setText(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: !text,\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-btn-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"open-btn\",\n        onClick: onOpenModal,\n        children: \"CHAT NOW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), open ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close-model\",\n      onClick: onCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClickModel, \"PdnMKE/WMFAsTkmbCiIWqDDOvl4=\");\n\n_c = ClickModel;\nexport default ClickModel; //     \"chat-model-size-client\"\n// \"chat-model-size-help\"\n\nvar _c;\n\n$RefreshReg$(_c, \"ClickModel\");","map":{"version":3,"sources":["C:/Users/ewt-all-in-one-1/Desktop/Chat-app/src/pages/ClickModel.js"],"names":["React","useState","useEffect","useRef","Modal","auth","db","addDoc","collection","doc","getDoc","onSnapshot","orderBy","query","Timestamp","Moment","Img","ClickModel","scrool","open","setOpen","text","setText","chat","setChat","user","setUser","onOpenModal","onCloseModal","userDetailsChat","JSON","parse","localStorage","getItem","user1","currentUser","uid","clientId","then","docSnap","exists","data","current","scrollIntoView","behavior","user2","id","msgsRef","q","querySnapshot","msgs","forEach","push","handleSubmit","e","preventDefault","from","to","createdAt","fromDate","Date","senderGmail","email","recevierName","name","recevierGmail","console","log","modal","msg","media","toDate","map","i","position","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport { auth, db } from \"../firebase\";\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  Timestamp,\r\n} from \"firebase/firestore\";\r\nimport Moment from \"react-moment\";\r\nimport Img from \"../image1.jpg\";\r\nconst ClickModel = () => {\r\n  const scrool = useRef();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n  const [user, setUser] = useState();\r\n\r\n  const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => setOpen(false);\r\n  const userDetailsChat = JSON.parse(localStorage.getItem(\"os-user\"));\r\n\r\n  const user1 = auth.currentUser.uid;\r\n  // const users = auth.onAuthStateChanged((user) => {\r\n  //   console.log(user.uid);\r\n  // });\r\n\r\n  const clientId = JSON.parse(localStorage.getItem(\"id\"));\r\n\r\n  useEffect(() => {\r\n    getDoc(doc(db, \"users\", auth.currentUser.uid)).then((docSnap) => {\r\n      if (docSnap.exists) {\r\n        setUser(docSnap.data());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrool.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    const user2 = clientId.id;\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n    const msgsRef = collection(db, \"messages\", id, \"chat\");\r\n    const q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\r\n\r\n    onSnapshot(q, (querySnapshot) => {\r\n      let msgs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        msgs.push(doc.data());\r\n      });\r\n      setChat(msgs);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const user2 = clientId.id;\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n    await addDoc(collection(db, \"messages\", id, \"chat\"), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n      // senderName: userDetailsChat.name,\r\n      senderGmail: userDetailsChat.email,\r\n      recevierName: clientId.name,\r\n      recevierGmail: clientId.email,\r\n    });\r\n    setText(\"\");\r\n  };\r\n\r\n  console.log(chat);\r\n\r\n  return (\r\n    <div>\r\n      {open === true ? (\r\n        <Modal\r\n          open={open}\r\n          onClose={onCloseModal}\r\n          classNames={{ modal: \"message-pop-model\" }}\r\n          center\r\n        >\r\n          <div className=\"chat-model-size\">\r\n            <div className=\"chat-model-size-img\">\r\n              <img src={Img} alt=\"img\" />\r\n              <div className=\"chat-model-size-status\">\r\n                {msg.media ? <img src={msg.media} alt={msg.text} /> : null}\r\n\r\n                <p>{user && user.name}</p>\r\n                <span>\r\n                  <Moment fromNow>{user && user.createdAt.toDate()}</Moment>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"chat-model-size-height\">\r\n              {chat &&\r\n                chat.map((data, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className={\r\n                      user1\r\n                        ? \"chat-model-size-client-model\"\r\n                        : \"chat-model-size-help-model\"\r\n                    }\r\n                    style={{ position: \"relative\" }}\r\n                    ref={scrool}\r\n                  >\r\n                    <p>{data.text}</p>\r\n                    <span>\r\n                      <Moment fromNow>{data.createdAt.toDate()}</Moment>\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat-model-size-position\">\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"chat-model-size-input d-flex\">\r\n                  <div className=\"chat-model-size-input-i\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Say something\"\r\n                      value={text}\r\n                      onInput={(e) => setText(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"\">\r\n                    <button type=\"submit\" disabled={!text}>\r\n                      Send\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      ) : (\r\n        <div className=\"app\">\r\n          <div className=\"open-btn-dot\"></div>\r\n          <button type=\"button\" className=\"open-btn\" onClick={onOpenModal}>\r\n            CHAT NOW\r\n          </button>\r\n        </div>\r\n      )}\r\n      {open ? (\r\n        <div className=\"close-model\" onClick={onCloseModal}>\r\n          <i className=\"fa fa-close\"></i>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClickModel;\r\n\r\n//     \"chat-model-size-client\"\r\n// \"chat-model-size-help\"\r\n"]},"metadata":{},"sourceType":"module"}