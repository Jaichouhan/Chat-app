{"ast":null,"code":"import _slicedToArray from\"C:/Users/ewt-all-in-one-1/Desktop/Chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Img from\"../image1.jpg\";import{onSnapshot,doc}from\"firebase/firestore\";import{db}from\"../firebase\";import Moment from\"react-moment\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var User=function User(_ref){var user1=_ref.user1,user=_ref.user,selectUser=_ref.selectUser,chat=_ref.chat;var user2=user===null||user===void 0?void 0:user.uid;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var id=user1>user2?\"\".concat(user1+user2):\"\".concat(user2+user1);var unsub=onSnapshot(doc(db,\"lastMsg\",id),function(doc){setData(doc.data());});return function(){return unsub();};},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"user_wrapper \".concat(chat.name===user.name&&\"selected_user\"),onClick:function onClick(){return selectUser(user);},children:/*#__PURE__*/_jsx(\"div\",{className:\"user_info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page-user-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:user.avatar||Img,alt:\"avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page-user-name\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[user.name,(data===null||data===void 0?void 0:data.from)!==user1&&(data===null||data===void 0?void 0:data.unread)&&/*#__PURE__*/_jsx(\"small\",{className:\"unread\",children:\"New\"})]}),data&&/*#__PURE__*/_jsx(\"p\",{className:\"truncate\",children:data.text})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"chat-page-user-info-p\",children:[/*#__PURE__*/_jsx(Moment,{fromNow:true,children:user.isOnline?user.createdAt.toDate():user.createdAt.toDate()}),/*#__PURE__*/_jsx(\"div\",{className:\"user_status \".concat(user.isOnline?\"online\":\"offline\")})]})]})})}),/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return selectUser(user);},className:\"sm_container \".concat(chat.name===user.name&&\"selected_user\"),children:/*#__PURE__*/_jsx(\"img\",{src:user.avatar||Img,alt:\"avatar\",className:\"avatar sm_screen\"})})]});};export default User;","map":{"version":3,"sources":["C:/Users/ewt-all-in-one-1/Desktop/Chat-app/src/components/User.js"],"names":["React","useEffect","useState","Img","onSnapshot","doc","db","Moment","User","user1","user","selectUser","chat","user2","uid","data","setData","id","unsub","name","avatar","from","unread","text","isOnline","createdAt","toDate"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CACA,OAASC,UAAT,CAAqBC,GAArB,KAAgC,oBAAhC,CACA,OAASC,EAAT,KAAmB,aAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,C,6IAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAuC,IAApCC,CAAAA,KAAoC,MAApCA,KAAoC,CAA7BC,IAA6B,MAA7BA,IAA6B,CAAvBC,UAAuB,MAAvBA,UAAuB,CAAXC,IAAW,MAAXA,IAAW,CAClD,GAAMC,CAAAA,KAAK,CAAGH,IAAH,SAAGA,IAAH,iBAAGA,IAAI,CAAEI,GAApB,CACA,cAAwBZ,QAAQ,CAAC,EAAD,CAAhC,wCAAOa,IAAP,eAAaC,OAAb,eAEAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,EAAE,CAAGR,KAAK,CAAGI,KAAR,WAAmBJ,KAAK,CAAGI,KAA3B,YAAwCA,KAAK,CAAGJ,KAAhD,CAAX,CACA,GAAIS,CAAAA,KAAK,CAAGd,UAAU,CAACC,GAAG,CAACC,EAAD,CAAK,SAAL,CAAgBW,EAAhB,CAAJ,CAAyB,SAACZ,GAAD,CAAS,CACtDW,OAAO,CAACX,GAAG,CAACU,IAAJ,EAAD,CAAP,CACD,CAFqB,CAAtB,CAGA,MAAO,kBAAMG,CAAAA,KAAK,EAAX,EAAP,CACD,CANQ,CAMN,EANM,CAAT,CAQA,mBACE,wCACE,YACE,SAAS,wBAAkBN,IAAI,CAACO,IAAL,GAAcT,IAAI,CAACS,IAAnB,EAA2B,eAA7C,CADX,CAEE,OAAO,CAAE,yBAAMR,CAAAA,UAAU,CAACD,IAAD,CAAhB,EAFX,uBAIE,YAAK,SAAS,CAAC,WAAf,uBAQE,aAAK,SAAS,CAAC,qBAAf,wBACE,YAAK,GAAG,CAAEA,IAAI,CAACU,MAAL,EAAejB,GAAzB,CAA8B,GAAG,CAAC,QAAlC,EADF,cAEE,aAAK,SAAS,CAAC,qBAAf,wBACE,qBACGO,IAAI,CAACS,IADR,CAEG,CAAAJ,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEM,IAAN,IAAeZ,KAAf,GAAwBM,IAAxB,SAAwBA,IAAxB,iBAAwBA,IAAI,CAAEO,MAA9B,gBACC,cAAO,SAAS,CAAC,QAAjB,iBAHJ,GADF,CAQGP,IAAI,eACH,UAAG,SAAS,CAAC,UAAb,UAEGA,IAAI,CAACQ,IAFR,EATJ,GAFF,cAiBE,WAAG,SAAS,CAAC,uBAAb,wBACE,KAAC,MAAD,EAAQ,OAAO,KAAf,UACGb,IAAI,CAACc,QAAL,CACGd,IAAI,CAACe,SAAL,CAAeC,MAAf,EADH,CAEGhB,IAAI,CAACe,SAAL,CAAeC,MAAf,EAHN,EADF,cAME,YACE,SAAS,uBACPhB,IAAI,CAACc,QAAL,CAAgB,QAAhB,CAA2B,SADpB,CADX,EANF,GAjBF,GARF,EAJF,EADF,cAgDE,YACE,OAAO,CAAE,yBAAMb,CAAAA,UAAU,CAACD,IAAD,CAAhB,EADX,CAEE,SAAS,wBAAkBE,IAAI,CAACO,IAAL,GAAcT,IAAI,CAACS,IAAnB,EAA2B,eAA7C,CAFX,uBAIE,YACE,GAAG,CAAET,IAAI,CAACU,MAAL,EAAejB,GADtB,CAEE,GAAG,CAAC,QAFN,CAGE,SAAS,CAAC,kBAHZ,EAJF,EAhDF,GADF,CA6DD,CAzED,CA2EA,cAAeK,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Img from \"../image1.jpg\";\r\nimport { onSnapshot, doc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst User = ({ user1, user, selectUser, chat }) => {\r\n  const user2 = user?.uid;\r\n  const [data, setData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n    let unsub = onSnapshot(doc(db, \"lastMsg\", id), (doc) => {\r\n      setData(doc.data());\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`user_wrapper ${chat.name === user.name && \"selected_user\"}`}\r\n        onClick={() => selectUser(user)}\r\n      >\r\n        <div className=\"user_info\">\r\n          {/*  <div className=\"user_detail\">\r\n            <img src={user.avatar || Img} alt=\"avatar\" className=\"avatar\" />\r\n            <h4>{user.name}</h4>\r\n            {data?.from !== user1 && data?.unread && (\r\n              <small className=\"unread\">New</small>\r\n            )}\r\n            </div>*/}\r\n          <div className=\"chat-page-user-info\">\r\n            <img src={user.avatar || Img} alt=\"avatar\" />\r\n            <div className=\"chat-page-user-name\">\r\n              <p>\r\n                {user.name}\r\n                {data?.from !== user1 && data?.unread && (\r\n                  <small className=\"unread\">New</small>\r\n                )}\r\n              </p>\r\n\r\n              {data && (\r\n                <p className=\"truncate\">\r\n                  {/*   <strong>{data.from === user1 ? \"Me:\" : null}</strong>*/}\r\n                  {data.text}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <p className=\"chat-page-user-info-p\">\r\n              <Moment fromNow>\r\n                {user.isOnline\r\n                  ? user.createdAt.toDate()\r\n                  : user.createdAt.toDate()}\r\n              </Moment>\r\n              <div\r\n                className={`user_status ${\r\n                  user.isOnline ? \"online\" : \"offline\"\r\n                }`}\r\n              ></div>\r\n            </p>\r\n            {/* <div\r\n              className={`user_status ${user.isOnline ? \"online\" : \"offline\"}`}\r\n           ></div>*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        onClick={() => selectUser(user)}\r\n        className={`sm_container ${chat.name === user.name && \"selected_user\"}`}\r\n      >\r\n        <img\r\n          src={user.avatar || Img}\r\n          alt=\"avatar\"\r\n          className=\"avatar sm_screen\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}